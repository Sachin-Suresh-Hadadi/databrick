trigger:
  - main

pool: 'Default'

variables:
  - name: DATABRICKS_ACCESS_TOKEN
    value: $(Accesskey)
  - name: DATABRICKS_WORKSPACE_URL
    value: $(WorkspaceUrl)
  - name: DATABRICKS_CLUSTER_ID
    value: $(ClusterId)
  - name: GITHUB_TOKEN 
    value: $(github_token)

steps:
  #- task: UsePythonVersion@0
    #inputs:
      #versionSpec: '3.11.2'
      #architecture: 'x64' 
      #addToPath: true
      #TOKEN: "$(GITHUB_TOKEN)"

  #- script: |
      #python -m pip install databricks-cli
      #databricks configure --token "$(DATABRICKS_ACCESS_TOKEN)"
      
  - script: | 
     python -m pip install --upgrade pip
     pip install databricks-cli
     databricks --version
     #databricks configure --token "$(DATABRICKS_ACCESS_TOKEN)"
     databricks secrets list-scopes
     databricks secrets create-scope --scope sachin
     databricks secrets list-scopes
    displayName: 'Upgrade pip & install databricks-cli'  

  #- script: | 
     #echo "Logging in to Databricks CLI..."
     #echo "$(databricksHost) 
     #$(databricksToken)" | databricks configure --token
     #echo -e "[DEFAULT]\nhost = $(DATABRICKS_WORKSPACE_URL)\ntoken = $(DATABRICKS_ACCESS_TOKEN)" > ~/.databrickscfg
     #echo "Testing connection to Databricks workspace..."
     #databricks workspace ls
    #displayName: 'Log in to Databricks CLI and test connection'
  #- task: Bash@3
    #inputs:
    #   targetType: 'inline'
    #   script: |
    #     databricks workspace import --source-path notebooks --target-path /notebooks/helloworld.py

 # - task: Bash@3
  #  inputs:
    #    targetType: 'inline'
   #     script: |
       #   databricks runs submit --json '{ "notebook_path": "/HelloWorld" }' --cluster-id "$(DATABRICKS_CLUSTER_ID)"
